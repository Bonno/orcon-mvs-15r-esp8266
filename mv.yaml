esphome:
  name: mv-control
  platform: ESP8266
  board: d1_mini

substitutions:
  devicename: "MV Control"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "{devicename} Fallback Hotspot"
    password: ""

# Enable logging
logger:
  #level: VERBOSE

# Enable Home Assistant API
api:
  encryption:
    key: ""

ota:
  password: ""

captive_portal:

time:
  - platform: homeassistant
    id: homeassistant_time
    update_interval: 5min

binary_sensor:
  - platform: status
    name: "${devicename} Status"

output:
  - platform: esp8266_pwm
    pin: D5
    frequency: 1000 Hz
    id: mv_pwm_out
    inverted: true

switch:
  - platform: restart
    name: "${devicename} Restart"
  - platform: gpio
    name: "${devicename} unit speed bypass"
    id: mv_unit_speed_bypass
    pin: 
      number: D8
      inverted: false

light:
  - platform: monochromatic
    output: mv_pwm_out
    name: "${devicename} unit speed"
    id: mv_unit_speed
    gamma_correct: 1
    icon: mdi:fan

sensor:
  - platform: uptime
    name: "${devicename} Uptime"

  - platform: wifi_signal
    name: "${devicename} Wi-Fi Signal"
    update_interval: 60s

  - platform: pulse_counter
    pin: D2
    name: "${devicename} Tacho"
    force_update: true
    update_interval: 10s
    accuracy_decimals: 0
    internal_filter: 5ms
    count_mode:
     falling_edge: INCREMENT
     rising_edge: DISABLE
  - platform: pulse_width
    pin: D1
    id: mv_speed_requested
    name: "${devicename} Speed Requested"
    update_interval: 10s
    accuracy_decimals: 5
    #internal: true
    on_value:
      then:
        - component.update: mv_remote_state

text_sensor:
  - platform: template
    id: mv_remote_state
    name: "${devicename} remote state"
    icon: mdi:fan
    lambda: |-
      float speed = id(mv_speed_requested).state;
      if(speed <= 0.00004)
      {
        return {};
      }
      else if(speed < 0.00006)
      {
        return {"Away"};
      }
      else if(speed < 0.00011)
      {
        return {"1"};
      }
      else if(speed < 0.00031)
      {
        return {"2"};
      }
      else
      {
        return {"3"};
      }
