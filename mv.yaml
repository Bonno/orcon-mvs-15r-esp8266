esphome:
  name: mv_control
  platform: ESP8266
  board: d1_mini

wifi:
  ssid: !secret ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "MV Fallback Hotspot"
    password: !secret fallback_password

captive_portal:

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:

output:
  - platform: esp8266_pwm
    pin: D6
    frequency: 1000 Hz
    id: mv_pwm_out
    inverted: true

switch:
  - platform: gpio
    name: "mv_unit_speed_bypass"
    id: mv_unit_speed_bypass
    pin: 
      number: D8
      inverted: True 

light:
  - platform: monochromatic
    output: mv_pwm_out
    name: "mv_unit_speed"
    id: mv_unit_speed
    gamma_correct: 1

sensor:
  - platform: pulse_counter
    pin: D2
    name: mv_tacho
    force_update: true
    update_interval: 5s
    accuracy_decimals: 0
    internal_filter: 250us
  - platform: pulse_width
    pin: D1
    id: mv_speed_requested
    update_interval: 2s
    accuracy_decimals: 5
    internal: true
    on_value:
      then:
        - component.update: mv_remote_state
text_sensor:
  - platform: template
    id: mv_remote_state
    name: mv_remote_state
    icon: mdi:fan
    lambda: |-
      float speed = id(mv_speed_requested).state;
      if(speed <= 0.00004)
      {
        return {};
      }
      else if(speed < 0.00008)
      {
        return {"Away"};
      }
      else if(speed < 0.00010)
      {
        return {"1"};
      }
      else if(speed < 0.00038)
      {
        return {"2"};
      }
      else
      {
        return {"3"};
      }
